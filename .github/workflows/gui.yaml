name: GUI
on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - uses: denoland/setup-deno@v1
        with:
          deno-version: 1.x

      - uses: pnpm/action-setup@v2
        with:
          version: 7.29.1

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: "pnpm"
          cache-dependency-path: gui/pnpm-lock.yaml

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./gui/src-tauri -> target"
          cache-on-failure: true

      - name: Compile s3si.ts
        run: deno run -A ./scripts/compile.ts

      - name: Install app dependencies
        working-directory: ./gui
        run: pnpm i

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        if: ${{ !startsWith(github.ref, 'refs/tags/gui-v') }}

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          projectPath: ./gui

      - name: Release the app
        uses: tauri-apps/tauri-action@v0
        if: ${{ startsWith(github.ref, 'refs/tags/gui-v') }}

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "s3si.ts v__VERSION__"
          releaseBody: "See the assets to download and install this version."
          releaseDraft: true
          prerelease: false
          projectPath: ./gui
